// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Template {
  id               Int    @id @default(autoincrement())
  filename         String
  namePositionY    Int    @map("name_position_y")
  titleUpperLimitY Int    @map("title_upper_limit_y")
  titleLowerLimitY Int    @map("title_lower_limit_y")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  certificate Certificate[]

  @@map("templates")
}

model Activity {
  auid      String   @id @default(uuid()) @db.Uuid
  title     String
  startDate DateTime @map("start_date")
  endDate   DateTime @map("end_date")
  url       String
  subject   String   @default("")
  email     String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  certificate Certificate[]
  participant Participant[]

  @@map("activities")
}

model Certificate {
  id          Int      @id @default(autoincrement())
  templateId  Int      @map("template_id")
  activityUid String   @map("activity_uid") @db.Uuid
  displayName String
  content     Json
  totalHour   Int?     @map("total_hour")
  dateString  String?  @map("date_string")
  filename    String
  url         String
  available   Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  activity               Activity                 @relation(fields: [activityUid], references: [auid], onUpdate: NoAction)
  participantCertificate ParticipantCertificate[]
  template               Template                 @relation(fields: [templateId], references: [id], onUpdate: Cascade)

  @@map("certificates")
}

model Participant {
  id          Int      @id @default(autoincrement())
  activityUid String   @map("activity_uid") @db.Uuid
  name        String
  from        String
  title       String
  email       String
  phone       String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  activity               Activity                 @relation(fields: [activityUid], references: [auid], onUpdate: NoAction)
  participantCertificate ParticipantCertificate[]

  @@map("participants")
}

model ParticipantCertificate {
  id        Int      @id @default(autoincrement())
  pid       Int
  cid       Int
  createdAt DateTime @default(now())

  participant Participant @relation(fields: [pid], references: [id], onUpdate: NoAction)
  certificate Certificate @relation(fields: [cid], references: [id], onUpdate: NoAction)

  @@unique([pid, cid])
  @@map("participant_certificate")
}
